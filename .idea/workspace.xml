<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d3f9d99c-1312-44b3-8aa2-f3db5e1834e5" name="变更" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/network/ws/def.go" beforeDir="false" afterPath="$PROJECT_DIR$/network/ws/def.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/network/ws/server_conn.go" beforeDir="false" afterPath="$PROJECT_DIR$/network/ws/server_conn.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/network/ws/server_conn_mgr.go" beforeDir="false" afterPath="$PROJECT_DIR$/network/ws/server_conn_mgr.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/network/ws/server_options.go" beforeDir="false" afterPath="$PROJECT_DIR$/network/ws/server_options.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../Go/go1.20.3" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2OJYTCtxcqAfRFL3ucv6CtGAjze" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../code/PropertyServer" />
    <property name="settings.editor.selected.configurable" value="go.sdk" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RunManager" selected="Go 测试.github.com/bitini111/mvta/transport/rpcx/node 中的 TestNewServer">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="mvta" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="mvta" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/bitini111/mvta/registry/etcd 中的 TestRegistry_Register1 (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mvta" />
      <working_directory value="$PROJECT_DIR$/registry/etcd" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitini111/mvta/registry/etcd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRegistry_Register1\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/bitini111/mvta/registry/etcd 中的 TestRegistry_Register1" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mvta" />
      <working_directory value="$PROJECT_DIR$/registry/etcd" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitini111/mvta/registry/etcd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRegistry_Register1\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/bitini111/mvta/transport/rpcx/node 中的 TestNewServer" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mvta" />
      <working_directory value="$PROJECT_DIR$/transport/rpcx/node" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitini111/mvta/transport/rpcx/node" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewServer\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/bitini111/mvta/utils/xnet 中的 TestParseAddr" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mvta" />
      <working_directory value="$PROJECT_DIR$/utils/xnet" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitini111/mvta/utils/xnet" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestParseAddr\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 测试.github.com/bitini111/mvta/transport/rpcx/node 中的 TestNewServer" />
        <item itemvalue="Go 测试.github.com/bitini111/mvta/utils/xnet 中的 TestParseAddr" />
        <item itemvalue="Go 测试.github.com/bitini111/mvta/registry/etcd 中的 TestRegistry_Register1 (1)" />
        <item itemvalue="Go 测试.github.com/bitini111/mvta/registry/etcd 中的 TestRegistry_Register1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/config/config.go</url>
          <line>17</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>